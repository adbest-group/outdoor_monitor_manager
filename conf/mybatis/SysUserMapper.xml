<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bt.om.mapper.SysUserMapper">
  <resultMap id="BaseResultMap" type="com.bt.om.entity.SysUser">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jan 16 16:41:44 CST 2018.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="platform" jdbcType="INTEGER" property="platform" />
    <result column="realname" jdbcType="VARCHAR" property="realname" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="usertype" jdbcType="INTEGER" property="usertype" />
    <result column="customer_type_id" jdbcType="INTEGER" property="customerTypeId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="login_ip" jdbcType="VARCHAR" property="loginIp" />
    <result column="login_time" jdbcType="TIMESTAMP" property="loginTime" />
    <result column="default_page" jdbcType="VARCHAR" property="defaultPage" />
    <result column="app_type_id" jdbcType="INTEGER" property="appTypeId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jan 16 16:41:44 CST 2018.
    -->
    id, username, password, platform, realname, mobile, usertype, customer_type_id, status, remark, login_ip, login_time,
    default_page,app_type_id, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jan 16 16:41:44 CST 2018.
    -->
    select 
    <include refid="Base_Column_List" />
    from sys_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jan 16 16:41:44 CST 2018.
    -->
    delete from sys_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bt.om.entity.SysUser" useGeneratedKeys="true" keyProperty="id">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jan 16 16:41:44 CST 2018.
    -->
    insert into sys_user (id, username, password, platform,
      realname, mobile, usertype, customer_type_id,
      status, remark, login_ip, 
      login_time, default_page,app_type_id, create_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{platform,jdbcType=INTEGER},
      #{realname,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{usertype,jdbcType=INTEGER}, #{customerTypeId,jdbcType=INTEGER},
      #{status,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{loginIp,jdbcType=VARCHAR}, 
      #{loginTime,jdbcType=TIMESTAMP}, #{defaultPage,jdbcType=VARCHAR},#{appTypeId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.bt.om.entity.SysUser" useGeneratedKeys="true" keyProperty="id">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jan 16 16:41:44 CST 2018.
    -->
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="platform != null">
        platform,
      </if>
      <if test="realname != null">
        realname,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="usertype != null">
        usertype,
      </if>
      <if test="customerTypeId != null" >
        customer_type_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="loginIp != null">
        login_ip,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="defaultPage != null">
        default_page,
      </if>
      <if test="appTypeId != null" >
        app_type_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="platform != null">
        #{platform,jdbcType=INTEGER},
      </if>
      <if test="realname != null">
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="usertype != null">
        #{usertype,jdbcType=INTEGER},
      </if>
      <if test="customerTypeId != null" >
        #{customerTypeId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="loginIp != null">
        #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="defaultPage != null">
        #{defaultPage,jdbcType=VARCHAR},
      </if>
      <if test="appTypeId != null" >
        #{appTypeId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
    
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.bt.om.entity.SysUser">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jan 16 16:41:44 CST 2018.
    -->
    update sys_user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="platform != null">
        platform = #{platform,jdbcType=INTEGER},
      </if>
      <if test="realname != null">
        realname = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="usertype != null">
        usertype = #{usertype,jdbcType=INTEGER},
      </if>
      <if test="customerTypeId != null" >
        customer_type_id = #{customerTypeId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="loginIp != null">
        login_ip = #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="defaultPage != null">
        default_page = #{defaultPage,jdbcType=VARCHAR},
      </if>
      <if test="appTypeId != null" >
        app_type_id = #{appTypeId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bt.om.entity.SysUser">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jan 16 16:41:44 CST 2018.
    -->
    update sys_user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
    platform = #{platform,jdbcType=INTEGER},
      realname = #{realname,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      usertype = #{usertype,jdbcType=INTEGER},
      customer_type_id = #{customerTypeId,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      login_ip = #{loginIp,jdbcType=VARCHAR},
      login_time = #{loginTime,jdbcType=TIMESTAMP},
      default_page = #{defaultPage,jdbcType=VARCHAR},
      app_type_id = #{appTypeId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <resultMap id="ExtResultMap" extends="BaseResultMap" type="com.bt.om.entity.vo.SysUserVo">
    <result column="telephone" jdbcType="INTEGER" property="telephone" />
    <collection property="menuList" column="username" javaType="list" select="com.bt.om.mapper.SysMenuMapper.findMenuListByUsername"></collection>
    <collection property="userinfo" column="userinfo_id" select="com.bt.om.mapper.SysUserDetailMapper.selectByPrimaryKey"></collection>
  </resultMap>

  <resultMap id="ListResultMap" extends="BaseResultMap" type="com.bt.om.entity.vo.SysUserVo">
    <result column="telephone" jdbcType="INTEGER" property="telephone" />
    <result column="customerTypeName" jdbcType="VARCHAR" property="customerTypeName" />
    </resultMap>

  <select id="findUserinfoById" parameterType ="map" resultMap="ExtResultMap">
    select
    tt1.id, tt1.username,tt1.realname, tt1.usertype, tt1.password, tt1.customer_type_id,tt1.app_type_id,
    tt2.id as userinfo_id, tt2.telephone,tt2.prefix, tt1.status, tt3.role_name
    from
    sys_user tt1,
    sys_user_detail tt2,
    (select t1.user_id, group_concat(t2.role_name order by t2.role_name asc) role_name from sys_user_role t1, sys_role t2 where t1.role_id = t2.id and t1.platform = 1 and t2.platform = 1 group by t1.user_id) tt3
    where
    tt1.id = tt3.user_id
    and tt1.id = tt2.user_id
    and tt1.id = #{id}
  </select>

  <select id="findByUsername" parameterType ="map" resultMap="ExtResultMap">
    select
    t1.id, t1.`username`, t1.`password`, t1.`status`, t1.usertype,
    t2.id as userinf_id
    from
    sys_user t1,sys_user_detail t2
    where
    t1.id = t2.user_id
    and t1.username = #{username}
  </select>

  <select id="getPageCount" parameterType="map" resultType="int">
    select
    count(1)
    from
    sys_user tt1,
    sys_user_detail tt2,
    (select t1.user_id, group_concat(t2.role_name order by t2.role_name asc) role_name from sys_user_role t1, sys_role t2 where t1.role_id = t2.id and t1.platform = 1 and t2.platform = 1 group by t1.user_id) tt3
    where
    tt1.id = tt3.user_id
    and tt1.id = tt2.user_id
    <if test="nameOrUsername != null">
      and (tt1.username like #{nameOrUsername} or tt1.realname like #{nameOrUsername})
    </if>
    <if test="usertype != null">
      and tt1.usertype = #{usertype,jdbcType=INTEGER}
    </if>
    <if test="ids != null">
         and tt1.id in
        <foreach collection="ids" separator="," open="(" close=")" item="s">#{s,jdbcType=INTEGER}
        </foreach>
  	</if>
    and tt1.platform=1
  </select>

  <select id="getPageData" parameterType="map" resultMap="ListResultMap">
    select
    	tt1.id, tt1.username, tt1.create_time, tt1.customer_type_id, tt1.realname, tt1.status,tt1.app_type_id,
    	tt2.id as userinfo_id, tt2.telephone, 
    	tt3.role_name
    from
	    sys_user tt1,
	    sys_user_detail tt2,
	    (select t1.user_id, group_concat(t2.role_name order by t2.role_name asc) role_name from sys_user_role t1, sys_role t2 
	    where t1.role_id = t2.id and t1.platform = 1 and t2.platform = 1 group by t1.user_id) tt3
    where
    	tt1.id = tt3.user_id
    	and tt1.id = tt2.user_id
	    <if test="nameOrUsername != null">
	      and (tt1.username like #{nameOrUsername} or tt1.realname like #{nameOrUsername})
	    </if>
	    <if test="ids != null">
	         and tt1.id in
	        <foreach collection="ids" separator="," open="(" close=")" item="s">#{s,jdbcType=INTEGER}
	        </foreach>
   		</if>
	    <if test="usertype != null">
	      and tt1.usertype = #{usertype,jdbcType=INTEGER}
	    </if>
    	and tt1.platform = 1
    order by tt1.id desc
  </select>

  <select id="isExistsName" parameterType="map" resultMap="BaseResultMap">
    select
    id
    from
    sys_user
    where
    username = #{username}
  </select>
  
  <!-- 通过usertype查询该类型的后台用户 -->
  <select id="getAllByUserType" resultMap="BaseResultMap" parameterType="java.lang.Integer">
  	select
  	<include refid="Base_Column_List" />
    from sys_user
    where usertype = #{usertype,jdbcType=INTEGER}
  </select>
  
  <!-- 通过usertype查询该类型的可用的后台用户 -->
  <select id="getAvailableByUserType" resultMap="BaseResultMap" parameterType="java.lang.Integer">
  	select
  	<include refid="Base_Column_List" />
    from sys_user
    where usertype = #{usertype,jdbcType=INTEGER}
    and status = 1
  </select>
  
  <!-- 添加管理领导账号 -->
  <insert id="createDepartmentLeader" parameterType="com.bt.om.entity.SysUser" useGeneratedKeys="true" keyProperty="id">
    insert into sys_user (id, username, password, platform,
      realname, mobile, usertype, 
      status, remark, login_ip, 
      login_time, default_page, create_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{platform,jdbcType=INTEGER},
      #{realname,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{usertype,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{loginIp,jdbcType=VARCHAR}, 
      #{loginTime,jdbcType=TIMESTAMP}, #{defaultPage,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  
  <!-- 更改管理领导账号密码，真实姓名 -->
  <update id="updatePasswordAndName" parameterType="com.bt.om.entity.SysUser">
    update sys_user a, sys_user_detail b
    set 
    	a.password = #{password,jdbcType=VARCHAR},
    	a.realname = #{realname,jdbcType=VARCHAR},
    	a.username = #{username,jdbcType=VARCHAR},
    	b.telephone = #{mobile,jdbcType=VARCHAR}
    where 
    b.user_id = a.id and
    a.id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- 更改管理领导账号状态 -->
  <update id="updateStatus" parameterType="com.bt.om.entity.SysUser">
    update sys_user
    set status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- 查询列表 -->
  <select id="findLeaderList" resultMap="BaseResultMap">
  	select
  	<include refid="Base_Column_List" />
    from sys_user
  </select>
  
  <!-- 查询所有任务 -->
  <select id="findAllTask" resultMap="BaseResultMap">
  	select
  	<include refid="Base_Column_List" />
    from sys_user
  </select>
  
  <!-- 通过组id查询所有与该组关联的员工信息 -->
  <select id="findUserName" resultMap="BaseResultMap">
    select
    	a.id id,
    	a.realname realname
    from sys_user a  
    left join sys_user_res b on a.id = b.user_id
    where a.usertype = 1
    and a.status = 1
    and b.type = 1
    and b.res_id = #{groupId,jdbcType=INTEGER}
  </select>
 
  <select id="findNoUserName" resultMap="BaseResultMap">
    select
    	a.id id,
    	a.realname realname
    from sys_user a  
    left join sys_user_res b on a.id = b.user_id
    where a.usertype = 1
    and a.status = 1
    and b.res_id is null;
  </select>
  	
  <select id="findCustomerName" resultMap="BaseResultMap">
    select
   		a.id id,
    	a.realname realname
    from sys_user a  
    left join sys_user_res b on a.id = b.user_id
    where a.usertype = 2
    and a.status = 1
    and b.type = 2
    and b.res_id = #{groupId,jdbcType=INTEGER}
  </select>
  
  <select id="findNoCustomerName" resultMap="BaseResultMap" parameterType="map">
    select
   		a.id id,
    	a.realname realname
    from sys_user a
    left join sys_user_res b on a.id = b.user_id
    where a.usertype = 2
    and a.status = 1
    and b.res_id in
    <foreach collection="groupIds" separator="," open="(" close=")" item="id">#{id,jdbcType=INTEGER}</foreach>
 </select>
 
  <select id="getIdNameByUserType" resultMap="BaseResultMap" parameterType="java.lang.Integer">
  	select
  		id, realname
    from sys_user
    where usertype = #{usertype,jdbcType=INTEGER}
  </select>
  <update id="updateUserPwd" parameterType="com.bt.om.entity.SysUser">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jan 23 17:12:28 CST 2018.
    -->
    update sys_user
    <set>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where username = #{username,jdbcType=VARCHAR}
  </update>
  <select id="getUserId" resultType="java.lang.Integer">
  	select id 
  	from sys_user
  	where usertype = 4
  </select>
  <update id="changeAppTypeById" parameterType="java.lang.Integer">
  	update sys_user 
  	<set>
  		<if test="appTypeId != null">
  			app_type_id = null
  		</if>
  	</set>
  	where app_type_id = #{appTypeId,jdbcType=INTEGER}
  </update>
</mapper>
